# ================================================================
# 理想论坛自动签到程序 - Git忽略文件
# 遵循软件开发最佳实践，包含所有常见的忽略项
# ================================================================

# ================== 项目特定文件 ==================
# 用户配置文件（包含敏感信息）
config.ini

# 日志文件
*.log
*.txt
sign_log.txt
scheduler_log.txt
debug.log
error.log
access.log

# 打包输出目录
理想论坛签到器GUI便携版/
理想论坛签到器-*/
dist/
build/
output/
release/

# Chrome浏览器驱动
chromedriver*
geckodriver*
edgedriver*
msedgedriver*

# 浏览器相关文件
selenium-manager*
.wdm/

# ================== Python 相关 ==================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# 虚拟环境
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# ================== IDE 和编辑器 ==================
# Visual Studio Code
.vscode/
*.code-workspace

# Visual Studio
.vs/
*.user
*.suo
*.sln.docstates

# IntelliJ IDEA / PyCharm
.idea/
*.iml
*.ipr
*.iws

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~
.netrwhist

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Atom
.atom/

# Kate
.kate-swp

# Eclipse
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# ================== 系统文件 ==================
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ================== 数据库文件 ==================
*.db
*.sqlite
*.sqlite3
*.db3

# ================== 缓存和临时文件 ==================
# 通用缓存
.cache/
cache/
temp/
tmp/
temporary/

# Node.js（如果项目中有前端部分）
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# ================== 环境变量和配置 ==================
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# ================== 压缩文件 ==================
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# ================== 媒体文件（通常不需要版本控制）==================
# 图片
# *.jpg
# *.jpeg
# *.png
# *.gif
# *.bmp
# *.tiff
# *.ico

# 视频
# *.mp4
# *.avi
# *.mov
# *.wmv
# *.flv

# 音频
# *.mp3
# *.wav
# *.flac

# ================== 文档和报告 ==================
# 编译后的文档
*.pdf
*.doc
*.docx

# 报告文件
reports/
coverage/

# ================== 工具特定 ==================
# Vagrant
.vagrant/

# Docker
docker-compose.override.yml

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Ansible
*.retry

# ================== 备份文件 ==================
*.bak
*.backup
*.old
*.orig
*.save

# ================== AI 和机器学习 ==================
# Jupyter Notebook Checkpoints
.ipynb_checkpoints/

# Model files (可根据需要调整)
# *.pkl
# *.h5
# *.pb
# *.onnx

# Data files (可根据需要调整)
# *.csv
# *.json (配置文件除外)
# *.xml
# *.xlsx

# ================== 测试文件 ==================
# Pytest
.pytest_cache/

# Coverage
.coverage
htmlcov/

# ================== 自定义项目忽略 ==================
# 测试脚本（临时）
test_*.py
debug_*.py
temp_*.py

# 用户自定义脚本
user_scripts/
custom/

# 实验性功能
experimental/
playground/

# 第三方工具
tools/
bin/
vendor/

# 密钥和证书
*.key
*.pem
*.crt
*.p12
*.pfx

# ================== AI 助手记忆文件 ==================
.cunzhi-memory/

# ================== 结束 ==================
# 注意：某些文件可能需要根据项目具体需求进行调整
# 如果需要提交某些通常被忽略的文件，可以使用 git add -f filename